[["index.html", "Example Analyses: Using the SGBA-5 with Simulated Data Chapter 1 About 1.1 Further Resources", " Example Analyses: Using the SGBA-5 with Simulated Data A Putman S Dogra 2024-08-30 Chapter 1 About The example analyses presented in this document are a demonstration of how sex-and gender-based analysis (SGBA) can be conducted using results from the Sex- and Gender-Based Analysis Tool – 5 item (SGBA-5) by Putman and Dogra [DOI].The examples in this document demonstrate a descriptive analysis of simulated SGBA-5 responses and SGBA of simulated health outcomes that are continuous, ordered (Likert scale), or categorical (binary) to examine potential interactions with the biological sex item and two of the gendered aspects of health items. The examples do not cover all potential analyses that could be done using the SGBA-5 but does provide a solid foundation from which researchers can select from and build upon. 1.1 Further Resources More information on the SGBA-5, instructions for its use, and rationale for are included in the SGBA-5’s documentation [SUPPLEMENTARY MATERIAL URL]. Initial reliability and validity testing of the SGBA-5 are reported in the paper by Putman, Cole, &amp; Dogra [DOI] and in A Putman’s thesis work. "],["data-structure.html", "Chapter 2 Data Structure 2.1 Collected SGBA-5 Responses 2.2 Simulated Data", " Chapter 2 Data Structure 2.1 Collected SGBA-5 Responses After collecting responses from the SGBA-5 you will have a dataset that looks something like this: Table 2.1: Example Data Structure pt_id sex gen_id gen_exp gen_role gen_rel 1 Female 48 99 70 25 2 Male 100 17 99 2 3 Female 64 48 88 40 4 Female 24 46 36 88 5 Male 73 23 19 26 Note: The values in this table are placeholders for the example, not real data Where: pt_id is the participant identifier. sex is the SGBA-5 categorical Biological Sex item. response options of “male”, “female”, and “intersex”. gen_id is the SGBA-5 Gender Identity gendered aspect of health item. Responses are recorded as ordinal values between 0 to 100 on a feminine to masculine scale (measured in mm if completed on paper). gen_exp is the SGBA-5 Gender Expression gendered aspect of health item. Responses are recorded as ordinal values between 0 to 100 on a feminine to masculine scale (measured in mm if completed on paper). gen_role is the SGBA-5 Gender Role gendered aspect of health item. Responses are recorded as ordinal values between 0 to 100 on a feminine to masculine scale (measured in mm if completed on paper). gen_rel is the SGBA-5 Gender Relations gendered aspect of health item. Responses are recorded as ordinal values between 0 to 100 on a feminine to masculine scale (measured in mm if completed on paper). 2.2 Simulated Data This example analysis uses simulated data, if you wish to replicate the simulate data the code to do so is included in the Appendix or can be downloaded from this example’s github page. "],["descriptive-analysis.html", "Chapter 3 Descriptive Analysis 3.1 Visualize Distribution of SGBA-5 Responses 3.2 Descriptive Table of SGBA-5 Responses", " Chapter 3 Descriptive Analysis Note: for conciseness, the following examples will only show results for two of the four gendered aspects of health items from the SGBA-5 (gender identity, and gender roles) 3.1 Visualize Distribution of SGBA-5 Responses 3.1.1 Biological Sex Item In plot 3.1 we see that there are more participants who report their biological sex as assigned as female at birth (n=18) than males (n=12). Figure 3.1: Barplot of Biological Sex Responses 3.1.2 Gendered Aspect of Health Items Looking at the density plots for gender identity and gender role (figure 3.2), we see that while both variables are bimodal, the gender identity responses is more strongly bimodal with one peak closer to the feminine side of the feminine-masculine continuum and one peak closer to masculine end of that continuum. Further, we can also see that in general, participants reported their gender identity and roles as being more feminine, again with the gender identity responses showing this trend more strongly than the gender role responses. Figure 3.2: Density plots of Gender Identity and Roles Presently, there is no clear consensus on how to present descriptive statistics of bimodal variables in health research. Reporting the mean(sd) or median(IQR) of a variable does not clearly communicate that there is more than one peak in a bimodal variable’s distribution. When taken alongside the SGBA-5’s assumption that the feminine-masculine continuum doesn’t have a true 0 value, it is our suggestion that: If researchers decide to report a descriptive statistic for a bimodally distributed variable, they should report a nominal description of the variable’s distriubtion skew. For example, if a gendered aspect of health item from the SGBA-5 demonstrates a bimodal distribution, the variable’s skew can be described along the feminine-masculine continuum instead of reporting the numerical average alone. To be able to describe the skew of one of the gender variables, the authors suggest calculating the variable’s mean score along the feminine-masculine continuum and then reporting the skew using the suggested nominal classification guide seen in Table 3.1. Please note that these suggested classification guidelines are arbitrary and may not be appropriate in all circumstances. Table 3.1: Potential Interpretation of Sample Means for Gendered Aspect of Health Items. Mean Interpretation &gt;70 “Skews masculine” 55 to 70 “More masculine than feminine” 45 to 55 “Not strongly skewed” 30 to 45 “More feminine than masculine” &lt;30 “Skews feminine” Note: This table assumes you have recorded the gendered aspects of health items as 0 being the most feminine score and 100 being the most masculine score. For the simulated dataset represented in the density plots above, the mean score for the gender identity item was 50.2 and 46.8 for the gender role item. This means that when reporting descriptive statistics on the simulated sample we could report that: “The simulated sample was not strongly skewed on a feminine to masculine continuum for either the gender identity or gender role measures from the SGBA-5”. 3.2 Descriptive Table of SGBA-5 Responses Taking all these together, an example of a sample characteristics table of the SGBA-5 items in the simulated dataset could be presented as has been displayed in Table 3.2 Table 3.2: Simulated sample characteristics. SGBA Item Sample (n = 30) Biological Sex (n(%)) Female 14(47%) Intersex NA Male 16(53%) Gendered Aspect of Health (skew) Gender Identity Not strongly skewed Gendered Roles Not strongly skewed "],["continuous.html", "Chapter 4 SGBA of a Continuous Variable 4.1 Biological Sex", " Chapter 4 SGBA of a Continuous Variable Note: for conciseness, the following examples will only show results for two of the four gendered aspects of health items from the SGBA-5 (gender identity, and gender roles) 4.1 Biological Sex A good idea is to start by visualizing the continuous variable’s distribution disaggregated by sex like the density plot in Figure 4.1. Then calculate disaggregated summary statistics for the continuous variable disaggregated by sex (Table A4), and conduct a statistical test of difference in means (Welch’s t- test for this example). 4.1.1 Density Plot Interpretation: From the above density plots (Figure 4.1) we can see a distinct overlap in the “No interaction example” with suggests that in that example’s sample does not have a meaningful difference in the continuous outcome by sex. Conversely, the “Interaction example” density plot has two distinct peaks which suggests that its sample’s continuous outcome scores are associated with a participant’s sex. Figure 4.1: Density Plot of Continuous Variable by Biological Sex Examples 4.1.2 Summary Statistics Interpretation: As with the density plots, we see that the standard deviations of the continuous variable for both males and females overlap in the “No interaction example” (Table 4.1) - indicating a lack of significant difference by sex. The standard deviations of the continuous variable for both males and females do not overlap in the “Interaction example” (Table 4.2) - indicating a potential association between the continuous outcome and sex. Table 4.1: Interation example summary statisitics: Continuous outcome and biological sex biological sex n mean continuous SD continuous median continuous IQR continuous Female 14 3.5 1.94 4 2 Male 16 11.3 2.95 11 2 Table 4.2: No interation example summary statisitics: Continuous outcome and biological sex biological sex n mean continuous SD continuous median continuous IQR continuous Female 14 9.0 1.84 9 2 Male 16 10.8 3.47 11 3 4.1.3 Statistical Test No interaction: Welch’s t-test Table 4.3: Simulated sample characteristics. Example Test T-score 95% CI df p-value Interaction Welch’s t-test -1.80 (-3.85, 0.26) 23.4 0.084 No interaction Welch’s t-test -8.73 (-9.72, -6.02) 26.1 0.000 "],["appendix.html", "Chapter 5 Appendix 5.1 Simulated Data Creation", " Chapter 5 Appendix 5.1 Simulated Data Creation Below is the code used to create the simulated data that will be used to create the example SGBA seen throughout the rest of this example analysis. # load libraries ---------------------------------------------------------- library(tidyverse) ## ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ── ## ✔ dplyr 1.1.4 ✔ readr 2.1.5 ## ✔ forcats 1.0.0 ✔ stringr 1.5.1 ## ✔ ggplot2 3.5.1 ✔ tibble 3.2.1 ## ✔ lubridate 1.9.3 ✔ tidyr 1.3.1 ## ✔ purrr 1.0.2 ## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── ## ✖ dplyr::filter() masks stats::filter() ## ✖ dplyr::lag() masks stats::lag() ## ℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors # set seed for predictability set.seed(42, kind = &quot;Mersenne-Twister&quot;) # write simulation functions ---------------------------------------------- # function for simulating bimodal gender variables binom_bounded &lt;- function( n, prop, mean1, sd1, mean2, sd2, lim_low = -Inf, lim_up = Inf, round ){ # error checking if(prop &gt; 1 || prop&lt; 0){stop(&quot;binomial proportion should be between 0 and 1&quot;)} if(n &lt; 1){stop(&quot;n must be greater than or equal to 1&quot;)} if(sd1 &lt; 0 || sd2 &lt; 0){stop(&quot;standard deviations must be non-negative&quot;)} # create index index &lt;- rbinom(n, size = 1, prob = prop) # simulate each peak using a bounded `rnorm()` binom_sim1 &lt;- index * qnorm( runif( n, pnorm(lim_low, mean1, sd1), pnorm(lim_up, mean1, sd1) ), mean1, sd1) binom_sim0 &lt;- (1 - index) * qnorm( runif( n, pnorm(lim_low, mean2, sd2), pnorm(lim_up, mean2, sd2) ), mean2, sd2) binom_sim &lt;- binom_sim0 + binom_sim1 binom_sim &lt;- round(binom_sim, round) binom_sim } # function for simulating Likert/ordinal outcome variable ordinal_sim &lt;- function( n, mean, sd, lim_low = -Inf, lim_up = Inf ){ ord_sim &lt;- qnorm( runif( n, pnorm(lim_low, mean, sd), pnorm(lim_up, mean, sd) ), mean, sd) ord_sim &lt;- round(ord_sim, 0) ord_sim } # simulate SGBA-5 data with n of 30 ------------------------------------- # biological sex: categorical (female, intersex, male) bio_sex &lt;- factor( sample(c(&#39;Female&#39;, &#39;Male&#39;), 30, replace=TRUE, prob=c(0.6, 0.4)), ) # gender identity: ordered (0 [feminine] to 100 [masculine]) gen_id &lt;- binom_bounded( n = 30, prop = 0.6, mean1 = 20, sd1 = 20, mean2 = 85, sd2 = 15, lim_low = 0, lim_up = 100, round = 0 ) # gender role: ordered (0 [feminine] to 100 [masculine]) gen_role &lt;- binom_bounded( n = 30, prop = 0.6, mean1 = 25, sd1 = 20, mean2 = 80, sd2 = 20, lim_low = 0, lim_up = 100, round = 0 ) # simulate example positive outcome data with n of 30 ----------------------- ## simulated numerical outcome: -------------------------------------------- # by sex: males (mean = 12, SD = 3), females (mean = 4, sd = 2) outcome_num_pos_m &lt;- rnorm(n = 16, mean = 12, sd = 3) outcome_num_pos_f &lt;- rnorm(n = 14, mean = 4, sd = 2) outcome_num_pos_sex &lt;- c(outcome_num_pos_f, outcome_num_pos_m) # by g_id: high (mean = 12, SD = 3), low (mean = 4, sd = 2) outcome_num_pos_gid_high &lt;- rnorm(n = 15, mean = 12, sd = 3) outcome_num_pos_gid_low &lt;- rnorm(n = 15, mean = 4, sd = 2) outcome_num_pos_gid &lt;- c(outcome_num_pos_gid_high, outcome_num_pos_gid_low) # by g_role: high (mean = 12, SD = 3), low (mean = 4, sd = 2) outcome_num_pos_grol_high &lt;- rnorm(n = 12, mean = 12, sd = 3) outcome_num_pos_grol_low &lt;- rnorm(n = 18, mean = 7, sd = 2) outcome_num_pos_grol &lt;- c(outcome_num_pos_grol_high, outcome_num_pos_grol_low) ## simulated Likert outcome: --------------------------------------------- # by sex males (mean = 2, SD = 1), females (mean = 5, sd = 2) outcome_ord_pos_m &lt;- ordinal_sim( n = 16, mean = 2, sd = 1, lim_low = 1, lim_up = 7 ) outcome_ord_pos_f &lt;- ordinal_sim( n = 14, mean = 5, sd = 1, lim_low = 1, lim_up = 7 ) outcome_ord_pos_sex &lt;- c(outcome_ord_pos_f, outcome_ord_pos_m) %&gt;% factor(., levels = c(1,2,3,4,5,6,7), ordered = TRUE) # by g_id: high (mean = 5, SD = 2), low (mean = 1, sd = 2) outcome_ord_pos_high &lt;- ordinal_sim( n = 15, mean = 5, sd = 2, lim_low = 1, lim_up = 7 ) outcome_ord_pos_low &lt;- ordinal_sim( n = 15, mean = 1, sd = 2, lim_low = 1, lim_up = 7 ) outcome_ord_pos_gid &lt;- c(outcome_ord_pos_high, outcome_ord_pos_low) %&gt;% factor(., levels = c(1,2,3,4,5,6,7), ordered = TRUE) # by g_role: high (mean = 5, SD = 2), low (mean = 1, sd = 2) outcome_ord_pos_high &lt;- ordinal_sim( n = 12, mean = 5, sd = 2, lim_low = 1, lim_up = 7 ) outcome_ord_pos_low &lt;- ordinal_sim( n = 18, mean = 1, sd = 2, lim_low = 1, lim_up = 7 ) outcome_ord_pos_grol &lt;- c(outcome_ord_pos_high, outcome_ord_pos_low) %&gt;% factor(., levels = c(1,2,3,4,5,6,7), ordered = TRUE) ## simulated binary outcome: ----------------------------------------------- # by sex males (yes = .2, no = .8), females (yes = .8, no = .2) outcome_bin_pos_m &lt;- sample( c(&#39;yes&#39;,&#39;no&#39;), 16, replace = TRUE, prob = c(.2, .8) ) outcome_bin_pos_f &lt;- sample( c(&#39;yes&#39;,&#39;no&#39;), 14, replace = TRUE, prob = c(.8, .2) ) outcome_bin_pos_sex &lt;- append(outcome_bin_pos_f, outcome_bin_pos_m) %&gt;% factor() # by g_id: high (yes = .4, no = .6), low (yes = .8, no = .2) outcome_bin_pos_high &lt;- sample( c(&#39;yes&#39;,&#39;no&#39;), 15, replace = TRUE, prob = c(.4, .6) ) outcome_bin_pos_low &lt;- sample( c(&#39;yes&#39;,&#39;no&#39;), 15, replace = TRUE, prob = c(.8, .2) ) outcome_bin_pos_gid &lt;- append(outcome_bin_pos_high, outcome_bin_pos_low) %&gt;% factor() # by g_rol: high (yes = .3, no = .5), low (yes = .8, no = .2) outcome_bin_pos_high &lt;- sample( c(&#39;yes&#39;,&#39;no&#39;), 12, replace = TRUE, prob = c(.3, .7) ) outcome_bin_pos_low &lt;- sample( c(&#39;yes&#39;,&#39;no&#39;), 18, replace = TRUE, prob = c(.8, .2) ) outcome_bin_pos_grol &lt;- append(outcome_bin_pos_high, outcome_bin_pos_low) %&gt;% factor() # simulate example negative outcome data with n of 30 ----------------------- # simulated numerical outcome: continuous (mean = 10, SD = 3) outcome_num_neg &lt;- rnorm(n = 30, mean = 10, sd = 3) # simulated Likert outcome: 7-point Likert scale (mean = 4, SD = 2) outcome_ord_neg &lt;- ordinal_sim( n = 30, mean = 4, sd = 2, lim_low = 1, lim_up = 7 ) # simulated binary outcome: categorical (yes, no) outcome_bin_neg &lt;- factor( sample(c(&#39;yes&#39;,&#39;no&#39;), 30, replace = TRUE, prob = c(0.67, 0.33)) ) # create example data frame ----------------------------------------------- # combine into dataframe sim_data &lt;- tibble( bio_sex, gen_id, gen_role, #outcome_bin_pos, outcome_num_neg, outcome_ord_neg, outcome_bin_neg ) %&gt;% arrange(., bio_sex) %&gt;% cbind(., outcome_num_pos_sex) %&gt;% cbind(., outcome_ord_pos_sex) %&gt;% cbind(., outcome_bin_pos_sex) %&gt;% arrange(., gen_id) %&gt;% cbind(., outcome_num_pos_gid) %&gt;% cbind(., outcome_ord_pos_gid) %&gt;% cbind(., outcome_bin_pos_gid) %&gt;% arrange(., gen_role) %&gt;% cbind(., outcome_num_pos_grol) %&gt;% cbind(., outcome_ord_pos_grol) %&gt;% cbind(., outcome_bin_pos_grol) # save simulated df write_csv(sim_data, file = &quot;sim-data.csv&quot;) 5.1.1 Session Info for Data Creation sessioninfo::session_info(pkgs = &quot;loaded&quot;) ## ─ Session info ─────────────────────────────────────────────────────────────── ## setting value ## version R version 4.4.1 (2024-06-14) ## os macOS Sonoma 14.6.1 ## system aarch64, darwin20 ## ui X11 ## language (EN) ## collate en_US.UTF-8 ## ctype en_US.UTF-8 ## tz America/Toronto ## date 2024-08-30 ## pandoc 3.1.11 @ /Applications/RStudio.app/Contents/Resources/app/quarto/bin/tools/aarch64/ (via rmarkdown) ## ## ─ Packages ─────────────────────────────────────────────────────────────────── ## package * version date (UTC) lib source ## bit 4.0.5 2022-11-15 [1] CRAN (R 4.4.0) ## bit64 4.0.5 2020-08-30 [1] CRAN (R 4.4.0) ## bookdown 0.40 2024-07-02 [1] CRAN (R 4.4.0) ## bslib 0.7.0 2024-03-29 [1] CRAN (R 4.4.0) ## cachem 1.1.0 2024-05-16 [1] CRAN (R 4.4.0) ## cli 3.6.3 2024-06-21 [1] CRAN (R 4.4.0) ## colorspace 2.1-0 2023-01-23 [1] CRAN (R 4.4.0) ## crayon 1.5.3 2024-06-20 [1] CRAN (R 4.4.0) ## digest 0.6.36 2024-06-23 [1] CRAN (R 4.4.0) ## dplyr * 1.1.4 2023-11-17 [1] CRAN (R 4.4.0) ## evaluate 0.24.0 2024-06-10 [1] CRAN (R 4.4.0) ## fansi 1.0.6 2023-12-08 [1] CRAN (R 4.4.0) ## fastmap 1.2.0 2024-05-15 [1] CRAN (R 4.4.0) ## forcats * 1.0.0 2023-01-29 [1] CRAN (R 4.4.0) ## generics 0.1.3 2022-07-05 [1] CRAN (R 4.4.0) ## ggplot2 * 3.5.1 2024-04-23 [1] CRAN (R 4.4.0) ## glue 1.7.0 2024-01-09 [1] CRAN (R 4.4.0) ## gtable 0.3.5 2024-04-22 [1] CRAN (R 4.4.0) ## hms 1.1.3 2023-03-21 [1] CRAN (R 4.4.0) ## htmltools 0.5.8.1 2024-04-04 [1] CRAN (R 4.4.0) ## jquerylib 0.1.4 2021-04-26 [1] CRAN (R 4.4.0) ## jsonlite 1.8.8 2023-12-04 [1] CRAN (R 4.4.0) ## knitr 1.47 2024-05-29 [1] CRAN (R 4.4.0) ## lifecycle 1.0.4 2023-11-07 [1] CRAN (R 4.4.0) ## lubridate * 1.9.3 2023-09-27 [1] CRAN (R 4.4.0) ## magrittr 2.0.3 2022-03-30 [1] CRAN (R 4.4.0) ## munsell 0.5.1 2024-04-01 [1] CRAN (R 4.4.0) ## pillar 1.9.0 2023-03-22 [1] CRAN (R 4.4.0) ## pkgconfig 2.0.3 2019-09-22 [1] CRAN (R 4.4.0) ## purrr * 1.0.2 2023-08-10 [1] CRAN (R 4.4.0) ## R6 2.5.1 2021-08-19 [1] CRAN (R 4.4.0) ## readr * 2.1.5 2024-01-10 [1] CRAN (R 4.4.0) ## rlang 1.1.4 2024-06-04 [1] CRAN (R 4.4.0) ## rmarkdown 2.27 2024-05-17 [1] CRAN (R 4.4.0) ## rstudioapi 0.16.0 2024-03-24 [1] CRAN (R 4.4.0) ## sass 0.4.9.9000 2024-06-05 [1] Github (rstudio/sass@9228fcf) ## scales 1.3.0 2023-11-28 [1] CRAN (R 4.4.0) ## sessioninfo 1.2.2 2021-12-06 [1] CRAN (R 4.4.0) ## stringi 1.8.4 2024-05-06 [1] CRAN (R 4.4.0) ## stringr * 1.5.1 2023-11-14 [1] CRAN (R 4.4.0) ## tibble * 3.2.1 2023-03-20 [1] CRAN (R 4.4.0) ## tidyr * 1.3.1 2024-01-24 [1] CRAN (R 4.4.0) ## tidyselect 1.2.1 2024-03-11 [1] CRAN (R 4.4.0) ## tidyverse * 2.0.0 2023-02-22 [1] CRAN (R 4.4.0) ## timechange 0.3.0 2024-01-18 [1] CRAN (R 4.4.0) ## tzdb 0.4.0 2023-05-12 [1] CRAN (R 4.4.0) ## utf8 1.2.4 2023-10-22 [1] CRAN (R 4.4.0) ## vctrs 0.6.5 2023-12-01 [1] CRAN (R 4.4.0) ## vroom 1.6.5 2023-12-05 [1] CRAN (R 4.4.0) ## withr 3.0.0 2024-01-16 [1] CRAN (R 4.4.0) ## xfun 0.45 2024-06-16 [1] CRAN (R 4.4.0) ## yaml 2.3.8 2023-12-11 [1] CRAN (R 4.4.0) ## ## [1] /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library ## ## ────────────────────────────────────────────────────────────────────────────── "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
