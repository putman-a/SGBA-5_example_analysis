position = position_dodge2(width = 1, padding = .6),
) +
geom_hline(yintercept = .7, linetype = "dashed") +
ylim(0,1) +
ylab("Reliability Coefficient (95% CI)") +
xlab("Study Arm") +
coord_flip() +
theme_minimal()
# dot plot
ggplot(iccs, aes(x = as.factor(item), y = rel_coef, fill = arm)) +
geom_col(position = "dodge", width = 0.5) +
# facet_wrap(~ arm) +
geom_errorbar(aes(ymin = `95_l`, ymax = `95_u`),
position = position_dodge2(width = 1, padding = .6),
) +
geom_hline(yintercept = .7, linetype = "dashed") +
ylim(0,1) +
ylab("Reliability Coefficient (95% CI)") +
xlab("Study Arm") +
coord_flip() +
theme_minimal()
# dot plot
ggplot(iccs, aes(x = as.factor(item), y = rel_coef, fill = arm)) +
geom_col(position = "dodge", width = 1) +
# facet_wrap(~ arm) +
geom_errorbar(aes(ymin = `95_l`, ymax = `95_u`),
position = position_dodge2(width = 1, padding = .6),
) +
geom_hline(yintercept = .7, linetype = "dashed") +
ylim(0,1) +
ylab("Reliability Coefficient (95% CI)") +
xlab("Study Arm") +
coord_flip() +
theme_minimal()
# dot plot
ggplot(iccs, aes(x = as.factor(item), y = rel_coef, fill = arm)) +
geom_col(position = "dodge", width = .9) +
# facet_wrap(~ arm) +
geom_errorbar(aes(ymin = `95_l`, ymax = `95_u`),
position = position_dodge2(width = 1, padding = .6),
) +
geom_hline(yintercept = .7, linetype = "dashed") +
ylim(0,1) +
ylab("Reliability Coefficient (95% CI)") +
xlab("Study Arm") +
coord_flip() +
theme_minimal()
# dot plot
ggplot(iccs, aes(x = as.factor(item), y = rel_coef, fill = arm)) +
geom_col(position = "dodge", width = .8) +
# facet_wrap(~ arm) +
geom_errorbar(aes(ymin = `95_l`, ymax = `95_u`),
position = position_dodge2(width = 1, padding = .6),
) +
geom_hline(yintercept = .7, linetype = "dashed") +
ylim(0,1) +
ylab("Reliability Coefficient (95% CI)") +
xlab("Study Arm") +
coord_flip() +
theme_minimal()
# dot plot
ggplot(iccs, aes(x = as.factor(item), y = rel_coef, fill = arm)) +
geom_col(position = "dodge", width = .8) +
# facet_wrap(~ arm) +
geom_errorbar(aes(ymin = `95_l`, ymax = `95_u`),
position = position_dodge2(width = 1, padding = .1),
) +
geom_hline(yintercept = .7, linetype = "dashed") +
ylim(0,1) +
ylab("Reliability Coefficient (95% CI)") +
xlab("Study Arm") +
coord_flip() +
theme_minimal()
# dot plot
ggplot(iccs, aes(x = as.factor(item), y = rel_coef, fill = arm)) +
geom_col(position = "dodge", width = .8) +
# facet_wrap(~ arm) +
geom_errorbar(aes(ymin = `95_l`, ymax = `95_u`),
position = position_dodge2(width = .5, padding = .6),
) +
geom_hline(yintercept = .7, linetype = "dashed") +
ylim(0,1) +
ylab("Reliability Coefficient (95% CI)") +
xlab("Study Arm") +
coord_flip() +
theme_minimal()
# dot plot
ggplot(iccs, aes(x = as.factor(item), y = rel_coef, fill = arm)) +
geom_col(position = "dodge", width = .8) +
# facet_wrap(~ arm) +
geom_errorbar(aes(ymin = `95_l`, ymax = `95_u`),
position = position_dodge2(width = 2, padding = .6),
) +
geom_hline(yintercept = .7, linetype = "dashed") +
ylim(0,1) +
ylab("Reliability Coefficient (95% CI)") +
xlab("Study Arm") +
coord_flip() +
theme_minimal()
# dot plot
ggplot(iccs, aes(x = as.factor(item), y = rel_coef, fill = arm)) +
geom_col(position = "dodge", width = .8) +
# facet_wrap(~ arm) +
geom_errorbar(aes(ymin = `95_l`, ymax = `95_u`),
position = position_dodge2(width = .1, padding = .6),
) +
geom_hline(yintercept = .7, linetype = "dashed") +
ylim(0,1) +
ylab("Reliability Coefficient (95% CI)") +
xlab("Study Arm") +
coord_flip() +
theme_minimal()
# dot plot
ggplot(iccs, aes(x = as.factor(item), y = rel_coef, fill = arm)) +
geom_col(position = "dodge", width = .8) +
# facet_wrap(~ arm) +
geom_errorbar(aes(ymin = `95_l`, ymax = `95_u`)
# position = position_dodge2(width = .1, padding = .6),
) +
geom_hline(yintercept = .7, linetype = "dashed") +
ylim(0,1) +
ylab("Reliability Coefficient (95% CI)") +
xlab("Study Arm") +
coord_flip() +
theme_minimal()
# dot plot
ggplot(iccs, aes(x = as.factor(item), y = rel_coef, fill = arm)) +
geom_col(position = "dodge", width = .8) +
# facet_wrap(~ arm) +
geom_errorbar(aes(ymin = `95_l`, ymax = `95_u`) ,
position = position_dodge2(width = .5, padding = .5),
) +
geom_hline(yintercept = .7, linetype = "dashed") +
ylim(0,1) +
ylab("Reliability Coefficient (95% CI)") +
xlab("Study Arm") +
coord_flip() +
theme_minimal()
# dot plot
ggplot(iccs, aes(x = as.factor(item), y = rel_coef, fill = arm)) +
geom_col(position = "dodge", width = .5) +
# facet_wrap(~ arm) +
geom_errorbar(aes(ymin = `95_l`, ymax = `95_u`) ,
position = position_dodge2(width = .5, padding = .5),
) +
geom_hline(yintercept = .7, linetype = "dashed") +
ylim(0,1) +
ylab("Reliability Coefficient (95% CI)") +
xlab("Study Arm") +
coord_flip() +
theme_minimal()
# dot plot
ggplot(iccs, aes(x = as.factor(item), y = rel_coef, fill = arm)) +
geom_col(position = "dodge", width = .9) +
# facet_wrap(~ arm) +
geom_errorbar(aes(ymin = `95_l`, ymax = `95_u`) ,
position = position_dodge2(width = .5, padding = .5),
) +
geom_hline(yintercept = .7, linetype = "dashed") +
ylim(0,1) +
ylab("Reliability Coefficient (95% CI)") +
xlab("Study Arm") +
coord_flip() +
theme_minimal()
# dot plot
ggplot(iccs, aes(x = as.factor(item), y = rel_coef, fill = arm)) +
geom_col(position = "dodge", width = .85) +
# facet_wrap(~ arm) +
geom_errorbar(aes(ymin = `95_l`, ymax = `95_u`) ,
position = position_dodge2(width = .5, padding = .5),
) +
geom_hline(yintercept = .7, linetype = "dashed") +
ylim(0,1) +
ylab("Reliability Coefficient (95% CI)") +
xlab("Study Arm") +
coord_flip() +
theme_minimal()
mutate?
?mutate
library(tidyverse)
?mutate
?factor
install.packages
install.packages("emmeans")
library(emmeans)
?lmer
?t.test()
install.packages(c("devtools", "roxygen2", "testthat", "knitr"))
install.packages(c("KernSmooth", "survival"))
install.packages("tidyverse")
install.packages(lme4)
install.packages("lme4")
devtools::dev_sitrep()
devtools::dev_sitrep('rpkgs')
package_version("rpkgs")
package_version("dev_tools")
package_version("devtools")
package_version(devtools)
library(devtools)
package_version(devtools)
package_version("devtools")
package_version("tidyverse")
package_version('tidyverse')
?package_version
use_devtools()
if (interactive()) {
suppressMessages(require(devtools))
}
if (interactive()) {
suppressMessages(require(devtools))
}
options(
"Authors@R" = utils::person(
"Andrew", "Putman",
email = "andrew.putman@ontariotechu.ca",
role = c("aut", "cre"),
# comment = c(ORCID = "0000-1111-2222-3333")
),
License = "MIT + file LICENSE"
)
if (interactive()) {
suppressMessages(require(devtools))
}
options(
"Authors@R" = utils::person(
"Andrew", "Putman",
email = "andrew.putman@ontariotechu.ca",
role = c("aut", "cre"),
# comment = c(ORCID = "0000-1111-2222-3333")
),
License = "MIT + file LICENSE"
)
gitcreds::gitcreds_set()
gitcreds::gitcreds_get()
if (interactive()) {
suppressMessages(require(devtools))
}
options(
"Authors@R" = utils::person(
"A", "Putman",
email = "andrew.putman@ontariotechu.net",
role = c("aut", "cre"),
# comment = c(ORCID = "0000-1111-2222-3333")
),
License = "MIT + file LICENSE"
)
if (interactive()) {
suppressMessages(require(devtools))
}
options(
"Authors@R" = utils::person(
"A", "Putman",
email = "andrew.putman@ontariotechu.net",
role = c("aut", "cre"),
# comment = c(ORCID = "0000-1111-2222-3333")
),
License = "MIT + file LICENSE"
)
install.packages("devtools", "usethis", "roxygen2", "testthat", "knitr")
install.packages("devtools", "usethis", "roxygen2", "testthat", "knitr")
if (interactive()) {
suppressMessages(require(devtools))
}
options(
"Authors@R" = utils::person(
"A", "Putman",
email = "andrew.putman@ontariotechu.net",
role = c("aut", "cre"),
# comment = c(ORCID = "0000-1111-2222-3333")
),
License = "MIT + file LICENSE"
)
library(devtools)
create_package("~/Documents/R-package-creation/eda")
?S3Class()
install.packages("styler")
library(styler)
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
install.packages(c("DBI", "rlang"))
library(devtools)
usethis::edit_r_profile()
?cat
install.packages("rstudioapi")
night_owlish <- "https://raw.githubusercontent.com/batpigandme/night-owlish/master/rstheme/night-owlish.rstheme"
rstudioapi::addTheme(night_owlish, apply = TRUE)
oceanic_theme <- "https://raw.githubusercontent.com/gadenbuie/oceanic-eighties/master/oceanic-eighties.rstheme"
rstudioapi::addTheme(oceanic_theme, apply = FALSE)
# create temporary download directory
theme_49th_parallel <- fs::path_temp("49th_parallel-RStudio",
ext = "rstheme")
# download theme from github
download.file("https://raw.githubusercontent.com/wvictor14/rstudio_themes/master/49th%20Parallel.rstheme",
theme_49th_parallel)
# apply the theme
rstudioapi::addTheme(theme_49th_parallel,
apply = FALSE)
devtools::install_github("gadenbuie/rsthemes")
rsthemes::try_rsthemes()
rsthemes::install_rsthemes(style = "all", include_base16 = TRUE, destdir = "/Applications/RStudio.app/Contents/Resources/app/resources/themes")
rsthemes::try_rsthemes()
rsthemes::use_theme_favorite()
rsthemes::set_theme_favorite(c(
"base16 Apathy {rsthemes}", "base16 Ashes {rsthemes}",
"base16 Atelier Cave {rsthemes}", "base16 PhD {rsthemes}",
"base16 Unikitty Dark {rsthemes}", "base16 Unikitty Light {rsthemes}",
"Fairyfloss {rsthemes}", "Material Ocean {rsthemes}", "Night Owl {rsthemes}"
))
rsthemes::use_theme_favorite()
rsthemes::use_theme_favorite()
rsthemes::use_theme_favorite()
rsthemes::use_theme_favorite()
rsthemes::use_theme_favorite()
rsthemes::use_theme_favorite()
rsthemes::use_theme_favorite()
rsthemes::use_theme_favorite()
rsthemes::use_theme_favorite()
rsthemes::use_theme_favorite()
rsthemes::use_theme_favorite()
rsthemes::use_theme_favorite()
rsthemes::use_theme_favorite()
rsthemes::use_theme_favorite()
rsthemes::use_theme_favorite()
rsthemes::use_theme_favorite()
rsthemes::list_rsthemes()
rsthemes::try_rsthemes()
usethis::create_from_github()
usethis::create_from_github("https://github.com/putman-a/SGBA-5_example_analysis.git", destdir = "git/")
usethis::create_from_github("https://github.com/putman-a/SGBA-5_example_analysis.git", destdir = "git/")
?require
?usethis
usethis::git_remotes()
gitcreds::gitcreds_get()
gitcreds::gitcreds_set()
gitcreds::gitcreds_get()
install.packages(c("cli", "crayon", "DBI", "digest", "downlit", "evaluate", "foreign", "ggsci", "lme4", "MASS", "nlme", "nloptr", "pbkrtest", "pkgload", "ps", "roxygen2", "SparseM", "survival", "xfun"))
create_package("~/Desktop/eda2")
create_package("~/Desktop/eda2")
?Gtest
??Gtest
??GTest
install.packages("DescTools")
?GTest()
?DescTools::GTest
install.packages(c("lubridate", "ggsurvfit", "gtsummary", "tidycmprsk"))
rsthemes::set_theme_favorite()
rsthemes::set_theme_favorite()
rsthemes::try_rsthemes()
rsthemes::install_rsthemes("Serendipity Light")
rsthemes::install_rsthemes(style = "Serendipity Light")
?rsthemes::install_rsthemes
rsthemes::list_rsthemes()
rsthemes::install_rsthemes()
rsthemes::list_rsthemes()
rsthemes::try_rsthemes()
rsthemes::set_theme_light(theme = "a11y-light {rsthemes}")
rsthemes::use_theme_light()
library(lubridate)
library(ggsurvfit)
library(gtsummary)
library(survival)
# lung datset from survival package
lung <- survival::lung %>%
mutate(
## recode censored to 0 and death (event) to 1
status = recode(status, `1` = 0, `2` = 1)
)
library(tidyverse)
library(survival)
library(lubridate)
library(ggsurvfit)
library(gtsummary)
# lung datset from survival package
lung <- survival::lung %>%
mutate(
## recode censored to 0 and death (event) to 1
status = case_when(
status == `1` ~ 0,
status == `2` ~ 1,
TRUE ~ NA
)
)
# lung datset from survival package
lung <- survival::lung #%>%
mutate(
## recode censored to 0 and death (event) to 1
status = case_when(
status == 1 ~ 0,
status == 2 ~ 1,
TRUE ~ NA
)
)
# lung datset from survival package
lung <- survival::lung %>%
mutate(
## recode censored to 0 and death (event) to 1
status = case_when(
status == 1 ~ 0,
status == 2 ~ 1,
TRUE ~ NA
)
)
summary(lung$status)
# base Surv object
base_surv <- Surv(lung$time, lung$status)[1:10]
base_surv
# create Kaplan-Meier curve
KMC <- survfit(Surv(time, status) ~ 1, data = lung)
str(KMC)
## plot Kaplan-Meier curve
ggsurvfit::survfit2(Surv(time, status) ~ 1, data = lung) %>%
ggsurvfit() +
labs(
x = "Days",
y = "Overall survival probability"
)
## plot Kaplan-Meier curve
ggsurvfit::survfit2(Surv(time, status) ~ 1, data = lung) %>%
ggsurvfit() +
labs(
x = "Days",
y = "Overall survival probability"
) +
add_confidence_interval() # ggsurvfit adds CIs
## plot Kaplan-Meier curve
ggsurvfit::survfit2(Surv(time, status) ~ 1, data = lung) %>%
ggsurvfit() +
labs(
x = "Days",
y = "Overall survival probability"
) +
add_confidence_interval() + # ggsurvfit adds CIs
add_risktable() # ggsurvfit adds risk tables for x-axis ticks
# yearly probability of survival
summary(survfit(Surv(time, status) ~ 1, data = lung), times = 365.25)
# formatted table of 1-year probability of survival
oneYtab <- survfit(Surv(time, status) ~ 1, data = lung) %>%
tbl_survfit(
times = 365.25,
label_header = "**1-year survival (95% CI)**"
)
# formatted table of 1-year probability of survival
survfit(Surv(time, status) ~ 1, data = lung) %>%
gtsummary::tbl_survfit(
times = 365.25,
label_header = "**1-year survival (95% CI)**"
)
# formatted table of 1-year probability of survival
oneYtab <- KMC %>%
gtsummary::tbl_survfit(
times = 365.25,
label_header = "**1-year survival (95% CI)**"
)
??cardx
?tbl_survfit
# formatted table of 1-year probability of survival
oneYtab <- gtsummary::tbl_survfit(KMC, times = 365.25)
install.packages("cardx")
# formatted table of 1-year probability of survival
oneYtab <- gtsummary::tbl_survfit(KMC, times = 365.25)
oneYtab
# formatted table of 1-year probability of survival
oneYtab <- gtsummary::tbl_survfit(KMC, times = 365.25,
label_header = "**1-year survival (95% CI)**")
oneYtab
# use summary on Kaplan-Meier object
summary(KMC)
# print Kaplan-Meier object
KMC
# create summary for median time
MEDIANtab <- gtsummary::tbl_survfit(KMC, probs = 0.5,
abel_header = "**Median survival (95% CI)**")
# create summary for median time
MEDIANtab <- gtsummary::tbl_survfit(KMC, probs = 0.5,
label_header = "**Median survival (95% CI)**")
MEDIANtab
# log-rank test of binary groups
survdiff(Surv(time, status) ~ sex, data = lung)
# log-rank test of binary groups
logrank <- survdiff(Surv(time, status) ~ sex, data = lung)
logrank
# Cox proportional hazards regression
COXREG <- coxph(Surv(time, status) ~ sex, data = lung)
COXREG
# Cox proportional hazards regression
COXREG <- coxph(Surv(time, status) ~ sex + age, data = lung)
COXREG
## output Cox regression to table
COXREGtab <- tbl_regression(COXREG, exponentiate = TRUE)
## output Cox regression to table
COXREGtab <- tbl_regression(COXREG, exponentiate = TRUE)
COXREGtab
COXREG
??ggsurvplot
q()
citation()
?lme4
citation("lme4")
citation("tidyverse")
citation("broom.mixed")
install.packages("broom.mixed")
citation("broom.mixed")
install.packages("tableone")
?tableone
??tableone
citation("tableone")
install.packages("bookdown")
?bookdown
??bookdown
session_info()
setwd("~/git/SGBA-5_example_analysis")
